#BlueJ class context
comment0.params=bookingDateTime\ duration\ bookedBy\ bookedFor
comment0.target=Booking(java.time.LocalDateTime,\ int,\ Member,\ Court)
comment1.params=aDateTime\ duration
comment1.target=boolean\ overLap(java.time.LocalDateTime,\ int)
comment1.text=\r\n\ Checks\ if\ accepted\ date\ overlaps\ the\ existing\ booking\ date\r\n\ @param\ aDateTime\ the\ date\ time\ received\ for\ checking\r\n\ @param\ duration\ to\ mark\ endtime\ of\ the\ booking\ date\ and\ time\ to\ be\ checked\ for\ oerlapping\r\n\ @return\ true\ if\ overlaps,\ else\ false\r\n
comment2.params=
comment2.target=int\ getDifference()
comment2.text=\r\n\ Gives\ different\ in\ time\ between\ booking\ start\ time\ and\ end\ time\r\n\ @returns\ difference\ in\ minutes\r\n
comment3.params=
comment3.target=Court\ getCourt()
comment3.text=\r\n\ Gives\ court\ object\ the\ booking\ belongs\ to\r\n\ @returns\ court\ object\r\n
comment4.params=
comment4.target=Member\ getMember()
comment4.text=\r\n\ Gives\ Member\ object\ the\ booking\ belongs\ to\ \r\n\ @returns\ member\ object\r\n
comment5.params=
comment5.target=java.time.LocalDateTime\ getBookingDateTime()
comment5.text=\r\n\ Gives\ datetime\ for\ the\ booking\r\n\ @returns\ bookingDateTime\ object\r\n
comment6.params=
comment6.target=int\ getDuration()
comment6.text=\r\n\ returns\ duration\ of\ the\ booking\r\n\ @returns\ duration\ of\ the\ booking\r\n
comment7.params=aBooking
comment7.target=int\ compareTo(Booking)
comment7.text=\r\n\ Used\ by\ sort()\ method\ from\ interface\ comparable\r\n\ @returns\ -1,0\ or\ 1\ as\ per\ comparison\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Returns\ information\ about\ the\ booking\ object\r\n
numComments=9
